{"version":3,"file":"adapter.js","sourceRoot":"","sources":["../src/adapter.ts"],"names":[],"mappings":"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","sourcesContent":["import type { DiscordGatewayAdapterCreator, DiscordGatewayAdapterLibraryMethods } from '@discordjs/voice';\nimport {\n\tGatewayDispatchEvents,\n\tGatewayVoiceServerUpdateDispatchData,\n\tGatewayVoiceStateUpdateDispatchData,\n} from 'discord-api-types/v10';\nimport { Snowflake, Client, Guild, VoiceBasedChannel, Constants } from 'discord.js';\n\nconst { Events, Status } = Constants;\n\nconst adapters = new Map<Snowflake, DiscordGatewayAdapterLibraryMethods>();\nconst trackedClients = new Set<Client>();\nconst trackedShards = new Map<number, Set<Snowflake>>();\n\n/**\n * Tracks a Discord.js client, listening to VOICE_SERVER_UPDATE and VOICE_STATE_UPDATE events\n *\n * @param client - The Discord.js Client to track\n */\nfunction trackClient(client: Client) {\n\tif (trackedClients.has(client)) return;\n\ttrackedClients.add(client);\n\tclient.ws.on(GatewayDispatchEvents.VoiceServerUpdate, (payload: GatewayVoiceServerUpdateDispatchData) => {\n\t\tadapters.get(payload.guild_id)?.onVoiceServerUpdate(payload);\n\t});\n\tclient.ws.on(GatewayDispatchEvents.VoiceStateUpdate, (payload: GatewayVoiceStateUpdateDispatchData) => {\n\t\tif (payload.guild_id && payload.session_id && payload.user_id === client.user?.id) {\n\t\t\t// @ts-expect-error TODO: currently voice is using a different discord-api-types version than discord.js\n\t\t\tadapters.get(payload.guild_id)?.onVoiceStateUpdate(payload);\n\t\t}\n\t});\n\tclient.on(Events.SHARD_DISCONNECT, (_, shardId) => {\n\t\tconst guilds = trackedShards.get(shardId);\n\t\tif (guilds) {\n\t\t\tfor (const guildID of guilds.values()) {\n\t\t\t\tadapters.get(guildID)?.destroy();\n\t\t\t}\n\t\t}\n\t\ttrackedShards.delete(shardId);\n\t});\n}\n\nfunction trackGuild(guild: Guild) {\n\tlet guilds = trackedShards.get(guild.shardId);\n\tif (!guilds) {\n\t\tguilds = new Set();\n\t\ttrackedShards.set(guild.shardId, guilds);\n\t}\n\tguilds.add(guild.id);\n}\n\n/**\n * Creates an adapter for a Voice Channel.\n *\n * @param channel - The channel to create the adapter for\n */\nexport function createDiscordJSAdapter(channel: VoiceBasedChannel): DiscordGatewayAdapterCreator {\n\treturn (methods) => {\n\t\tadapters.set(channel.guild.id, methods);\n\t\ttrackClient(channel.client);\n\t\ttrackGuild(channel.guild);\n\t\treturn {\n\t\t\tsendPayload(data) {\n\t\t\t\tif (channel.guild.shard.status === Status.READY) {\n\t\t\t\t\tchannel.guild.shard.send(data);\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\treturn false;\n\t\t\t},\n\t\t\tdestroy() {\n\t\t\t\treturn adapters.delete(channel.guild.id);\n\t\t\t},\n\t\t};\n\t};\n}\n"]}